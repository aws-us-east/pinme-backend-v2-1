AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Pinme backend v2

Globals:
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'*'"
  Function:
    Environment:
      Variables:
        REPORTS_PATH: ./reports/
        BACKEND_TABLE: !Ref BackendTable
        TRACCAR_ADMIN_USER: '{{resolve:secretsmanager:traccar:SecretString:username}}'
        TRACCAR_ADMIN_PASS: '{{resolve:secretsmanager:traccar:SecretString:password}}'
        DB_HOST: db.pinme.io
        DB_USER: '{{resolve:secretsmanager:db:SecretString:username}}'
        DB_PASSWORD: '{{resolve:secretsmanager:db:SecretString:password}}'
        REPORTS_QUEUE1: !Ref AutomaticReportsQueue1
        BASIC_REPORTS_QUEUE: !Ref BasicAutomaticReportsQueue
        IPINFO_TOKEN: df58ccf730ab1c
        geoapifyKey: 9a389d03f24848f2ac015e6997509dbe

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.10.0/24

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.11.0/24

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatElasticIP.AllocationId
      SubnetId: !Ref PublicSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NATGateway

  PrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  NatElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: pinme-backend-v2

  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LambdaWithStaticIP
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
      CodeUri: ./app/
      Policies:
        - AWSLambdaBasicExecutionRole
      VpcConfig:
        SubnetIds:
          - !Ref PrivateSubnet
        SecurityGroupIds:
          - !Ref SecurityGroup

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Lambda function
      VpcId: !Ref VPC

Outputs:
  ElasticIPAddress:
    Description: Elastic IP Address
    Value: !Ref NatElasticIP



